[{"C:\\Users\\esras\\meet\\src\\index.js":"1","C:\\Users\\esras\\meet\\src\\App.js":"2","C:\\Users\\esras\\meet\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\esras\\meet\\src\\reportWebVitals.js":"4","C:\\Users\\esras\\meet\\src\\EventList.js":"5","C:\\Users\\esras\\meet\\src\\CitySearch.js":"6","C:\\Users\\esras\\meet\\src\\Event.js":"7","C:\\Users\\esras\\meet\\src\\NumberofEvents.js":"8","C:\\Users\\esras\\meet\\src\\NumberOfEvents.js":"9","C:\\Users\\esras\\meet\\src\\api.js":"10","C:\\Users\\esras\\meet\\src\\mock-data.js":"11","C:\\Users\\esras\\meet\\src\\Alert.js":"12","C:\\Users\\esras\\meet\\src\\service-worker.js":"13","C:\\Users\\esras\\meet\\src\\WelcomeScreen.jsx":"14"},{"size":887,"mtime":1628769242182,"results":"15","hashOfConfig":"16"},{"size":2425,"mtime":1628781557182,"results":"17","hashOfConfig":"16"},{"size":5199,"mtime":1628767325457,"results":"18","hashOfConfig":"16"},{"size":399,"mtime":1627542173602,"results":"19","hashOfConfig":"16"},{"size":393,"mtime":1627580308404,"results":"20","hashOfConfig":"16"},{"size":2033,"mtime":1628694536648,"results":"21","hashOfConfig":"16"},{"size":1051,"mtime":1627744372243,"results":"22","hashOfConfig":"16"},{"size":582,"mtime":1627742262991,"results":"23","hashOfConfig":"24"},{"size":1132,"mtime":1628761811636,"results":"25","hashOfConfig":"16"},{"size":3440,"mtime":1628772690567,"results":"26","hashOfConfig":"16"},{"size":3187,"mtime":1627983255203,"results":"27","hashOfConfig":"16"},{"size":657,"mtime":1628697939623,"results":"28","hashOfConfig":"16"},{"size":2907,"mtime":1628769206371,"results":"29","hashOfConfig":"16"},{"size":840,"mtime":1628779825707,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14shhnd",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"170keuk",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\esras\\meet\\src\\index.js",[],"C:\\Users\\esras\\meet\\src\\App.js",[],"C:\\Users\\esras\\meet\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\esras\\meet\\src\\reportWebVitals.js",[],"C:\\Users\\esras\\meet\\src\\EventList.js",[],"C:\\Users\\esras\\meet\\src\\CitySearch.js",[],"C:\\Users\\esras\\meet\\src\\Event.js",[],"C:\\Users\\esras\\meet\\src\\NumberofEvents.js",[],"C:\\Users\\esras\\meet\\src\\NumberOfEvents.js",[],"C:\\Users\\esras\\meet\\src\\api.js",["60","61"],"import { mockData } from \"./mock-data\";\r\nimport axios from \"axios\";\r\nimport NProgress from \"nprogress\";\r\n\r\n/**\r\n *\r\n * @param {*} events:\r\n * The following function should be in the “api.js” file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\n export const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n  };\r\n\r\n  const checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n      `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n      .then((res) => res.json())\r\n      .catch((error) => error.json());\r\n  \r\n    return result;\r\n  };\r\n\r\n  export const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    if (window.location.href.startsWith('http://localhost')) {\r\n      NProgress.done();\r\n      return mockData;\r\n  }\r\n    if (!navigator.onLine) {\r\n      const data = localStorage.getItem(\"lastEvents\");\r\n      NProgress.done();\r\n      return data?JSON.parse(data).events:[];;\r\n    }\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://3x5fdvrn2h.execute-api.eu-central-1.amazonaws.com/dev/api/get-events' + '/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n\r\n  };\r\n\r\n  export const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://3x5fdvrn2h.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n\r\n  }\r\n  const removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n      var newurl =\r\n        window.location.protocol +\r\n        \"//\" +\r\n        window.location.host +\r\n        window.location.pathname;\r\n      window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n      newurl = window.location.protocol + \"//\" + window.location.host;\r\n      window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n  };\r\n  const getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(\r\n      'https://3x5fdvrn2h.execute-api.eu-central-1.amazonaws.com/dev/api/token' + '/' + encodeCode\r\n    )\r\n      .then((res) => {\r\n        return res.json();\r\n      })\r\n      .catch((error) => error);\r\n  \r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n  \r\n    return access_token;\r\n  };","C:\\Users\\esras\\meet\\src\\mock-data.js",[],"C:\\Users\\esras\\meet\\src\\Alert.js",[],"C:\\Users\\esras\\meet\\src\\service-worker.js",[],"C:\\Users\\esras\\meet\\src\\WelcomeScreen.jsx",[],{"ruleId":"62","severity":1,"message":"63","line":45,"column":96,"nodeType":"64","messageId":"65","endLine":45,"endColumn":97},{"ruleId":"62","severity":1,"message":"63","line":94,"column":81,"nodeType":"64","messageId":"65","endLine":94,"endColumn":82},"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat"]